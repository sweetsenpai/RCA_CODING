# Расшириный алгоритм Евклида
def gcdex(a, b):
    if b == 0:
        return a, 1, 0
    else:
        d, x, y = gcdex(b, a % b)
        return d, y, x - y * (a // b)


def rsa_generate_keys(p=61, q=83, e=13):
    # Выбираем два случайных простых числа одинаковго размера и перемножаем
    n = p * q
    # Вычесляем значение функции Эйлера от числа n
    fun = (p - 1) * (q - 1)
    # Выбираем целое число e, взаимно простое со значением Функции Эйлера
    # e = 13
    # Вычисляем число d,мультипликативно обратное к числу e по модулю значания Функции Эйлера
    d = gcdex(e, fun)[1]
    return e, n, d


abc = "0 1 2 3 4 5 6 7 8 9 А а Б б В в Г г Д д Е е Ж ж З з И и Й й К к Л л М м Н н О о П п Р р С с Т т У у Ф ф Х х Ц ц Ч ч Ш ш Щ щ ъ " \
          "Ы ы ь Э э Ю ю Я я ! ? . , - ".split()
abc.append(" ")
